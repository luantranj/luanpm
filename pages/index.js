import Head from 'next/head';
import Image from 'next/image';

// Import coingecko-api
const CoinGecko = require('coingecko-api');
 
// Initiate the CoinGecko API Client
const CoinGeckoClient = new CoinGecko();


export async function getStaticProps() {
  const btc = await CoinGeckoClient.coins.fetch('bitcoin', {tickers: false, developer_data: false});
  
  const luanPM = await fetch(process.env.ENDPOINT);
  const portfolio = await luanPM.json();

  return {
    props: { btc, portfolio },
    revalidate: 60
  }
}


export default function Home({ btc, portfolio }) {
  const { data } = btc;
  const btcVND = data.market_data.current_price.vnd;
  const priceChange24H = data.market_data.price_change_24h_in_currency.vnd;
  const marketCap = data.market_data.market_cap.vnd;
  const update = data.market_data.last_updated.split('T');
  
  console.log(data);
  // console.log(portfolio);


  function formatVND(number, maximumSignificantDigits) {
    return (
      new Intl.NumberFormat(
        'vn-VN',
        {
          style: 'currency',
          currency: 'vnd',
          maximumSignificantDigits
        }
      ).format(number)
    )
  }


  return (
    <div>
      <Head>
        <title>LUAN Portfolio Manager</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />        
      </Head>

      <div className="container-lg">
        <div className="row justify-content-center">
          <div className="col mt-5 text-center">
            <small className="text-muted">Last Updated at { update[1].split('.')[0] }, { update[0] } (GMT)</small>            
          </div>
        </div>
        <div className="row justify-content-center">
          {portfolio.map(p => {return (
            <div className="col-md-6" key={p.id}>            
            <div className={ p.id > 0 ? "card text-white mt-5 mx-auto bg-secondary": "card text-white mt-5 mx-auto bg-success" }>
              <div className="card-header">
                <a href="https://passwordsgenerator.net/sha256-hash-generator/" className="link-light text-decoration-none">
                  <strong>{ p.hash.slice(0, 8) }</strong>
                </a>
              </div>
              <ul className="list-group fw-bold">
                  <li className="list-group-item">
                    <small className="text-muted">Portfolio Balance: </small>
                    { formatVND(p.diagnostics[1].value * btcVND, 10) }
                  </li>
                  <li className="list-group-item">
                    <small className="text-muted">Profit: </small>
                    <span className={ p.diagnostics[1].value * btcVND - p.diagnostics[0].value > 0 ? 'text-success' : 'text-danger' }> { formatVND(p.diagnostics[1].value * btcVND - p.diagnostics[0].value, 10) }</span>
                  </li>
                  <li className="list-group-item">
                    <small className="text-muted">Principal: </small>
                    <span className="fw-normal">{ formatVND(p.diagnostics[0].value, 10) }</span>
                  </li>                    
              </ul>  
              <div className="card-footer align-items-center">
                <Image src="/bitcoin.png" width="16" height="16" alt="Bitcoin icon" />
                <small>                  
                  <span className="fw-normal"> { p.diagnostics[1].value }</span>
                </small>
              </div>            
            </div>                        
          </div>
          )})
          
          }

          <div className="col-md-4 mx-auto">          
            <div className="card border-warning mt-5 fw-bold mx-auto">
              <div className="card-header text-warning">BITCOIN</div>
              <ul className="list-group list-group-flush">
                <li className="list-group-item">
                  <small className="text-muted">24H Change: </small> 
                  <span className={ priceChange24H > 0 ? 'text-success' : 'text-danger' }>{ formatVND(priceChange24H, 10) }</span>
                </li>
                <li className="list-group-item"><small className="text-muted">Price: </small> { formatVND(btcVND, 20) }</li>
                <li className="list-group-item">
                  <small className="text-muted">Market Cap: </small> 
                  <span className="fw-normal">{ formatVND(marketCap, 20) }</span>
                </li>
              </ul>
              <div className="card-footer text-end">
                <a href="https://www.coingecko.com/vi/ty_gia/bitcoin" className="btn btn-warning btn-sm fw-bold">
                  <small>Continue Reading</small>
                </a>
              </div>
            </div>            
          </div>
        </div>
      </div>
    </div>
  )
}
